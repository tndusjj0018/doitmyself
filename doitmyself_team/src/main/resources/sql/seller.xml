<?xml version="1.0" encoding="UTF-8"?>	<!-- SQL 맵퍼 파일은 xml 이기 때문에 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Seller">
	<select id="SellerInfo" parameterType="Map" resultType="seller">
		select * from seller_tbl
		where seller_id = #{id}
	</select>
	
	<!-- 판매자 정보수정 -->
	<update id="SellerInfoUpdate" parameterType="seller">
		update seller_tbl
		set seller_name = #{SELLER_NAME}, seller_address = #{SELLER_ADDRESS}, 
			seller_postcode = #{SELLER_POSTCODE}, seller_b_num = #{SELLER_B_NUM}
		where seller_id = #{SELLER_ID} 
	</update>
	
	<!-- 카테고리 가져오기 -->
	<select id="ProductCategory" resultType="category">
		select * from category_tbl		
	</select>
	
	<!-- 서브카테고리 가져오기 -->
	<select id="ProductSubCategory" parameterType="Map" resultType="sub">
		select * from sub_category_tbl
		where sc_no_ref = #{c_no}
	</select>
	
	<!-- 상품 등록 -->
	<insert id="ProductInsert" parameterType="product">
		<selectKey resultType="int" order="BEFORE" keyProperty="P_NO">
			select nvl(max(P_NO),0)+1 from product_tbl
		</selectKey>
		insert into product_tbl
		(P_NO, P_NAME, P_SELLER, P_CATEGORY_NO, P_PRICE, P_IMG,
		 P_QUANTITY, P_DESCRIPTION, P_REGDATE)
		values(#{P_NO}, #{P_NAME}, #{P_SELLER}, #{P_CATEGORY_NO},
				#{P_PRICE}, #{P_IMG}, #{P_QUANTITY}, #{P_DESCRIPTION}, SYSDATE)
	</insert>
	
	<!-- 주문관리 리스트 -->
	<select id="OrderList" parameterType="Map" resultType="order">
		select * from
		   (select rownum rnum, U.USER_PHONE, U.USER_NAME, J.*
		   from 
		         (select  O.ORDER_P_NO, O.ORDER_DELIVERY, O.ORDER_STATUS, O.ORDER_ID,
		               O.ORDER_PRICE, O.ORDER_PAYMENT, O.ORDER_ADDRESS, O.ORDER_DATE,
		               O.ORDER_AMOUNT, P.P_IMG, P.P_NAME
		         from ORDER_TBL O join PRODUCT_TBL P
		         on P.P_NO = O.ORDER_P_NO
		         where O.ORDER_SELLER = #{USER_ID}
		         and O.ORDER_STATUS = 0 <!-- 주문상태인것만 -->
		         <if test="status != null">
		         	<choose>
		         		<when test="status == 'order-all'"></when>
		         		<when test="status == 'order-success'">and order_delivery = 0</when>
		         		<when test="status == 'order-paymentFinish'">and order_delivery = 1</when>
		         		<when test="status == 'order-preparing'">and order_delivery = 2</when>
		         		<when test="status == 'order-shipping'">and order_delivery = 3</when>
		         		<when test="status == 'order-complete'">and order_delivery = 4</when>
		         	</choose>
		         </if>
		         <if test="search_field != null">
		         and
		         <choose>
		         	<when test="search_field == 'order_name'">P.P_NAME</when>
		         	<when test="search_field == 'order_id'">O.ORDER_ID</when>
		         </choose>		       
		         like #{search_word}  
		         </if>
		         <if test="startDate != null">
		         and O.ORDER_DATE between #{startDate} and #{endDate}
		         </if>
		         order by
	         	 <choose>
	         		<when test="viewSelect == 'date'">O.ORDER_DATE</when>
	         		<when test="viewSelect == 'amount'">O.ORDER_AMOUNT</when>
	         		<when test="viewSelect == 'price'">O.ORDER_PRICE</when>
	         	 </choose>
		         desc)J join USER_TBL U
		   on J.ORDER_ID = U.USER_ID)
      where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<!-- 가게이름 가져옴 -->
	<select id="SellerName" resultType="String">
		SELECT seller_name FROM seller_tbl
		WHERE seller_id = #{USER_ID}
	</select>
	
	<!-- OrderCount -->
	<select id="OrderCount" resultType="int" parameterType="String">
		SELECT count(*) FROM order_tbl
		WHERE order_seller = #{USER_ID}
	</select>
	
	<!-- 판매관리 판매리스트 -->
	<select id="SaleSelect" parameterType="Map" resultType="product">
		SELECT * FROM product_tbl
		WHERE p_seller = (select seller_name from seller_tbl
						where seller_id = #{USER_ID})
		order by
		<choose>
			<when test="saleSelect == 'P_REGDATE'">p_regdate DESC</when>
			<when test="saleSelect == 'P_QUANTITY'">p_quantity DESC</when>			
			<when test="saleSelect == 'P_PRICE'">p_price DESC</when>
		</choose> 
	</select>
	
	<!-- 상품 수정 페이지 -->
	<select id="productInfo" parameterType="int" resultType="product">
		SELECT * from product_tbl
		WHERE p_no = #{P_NO}
	</select>
	
	<!-- 상품 수정 -->
	<update id="productUpdate" parameterType="product">
		UPDATE product_tbl
		SET
			p_name = #{P_NAME},
			p_category_no = #{P_CATEGORY_NO},
			p_price = #{P_PRICE},
		<choose>
			<when test="P_IMG != ''">
			p_img = #{P_IMG},
			</when>
		</choose>
			p_quantity = #{P_QUANTITY},
			p_description = #{P_DESCRIPTION}
		WHERE p_no = #{P_NO}
	</update>
	
	<!-- 배송 상태 변경 -->
	<update id="orderDelivery" parameterType="Map">
		UPDATE order_tbl
		SET
			order_delivery = #{orderDeliveryVal}
			<choose>
				<when test="ORDER_TRNO != 0">
				,order_trno = #{ORDER_TRNO}
				</when>
			</choose>
		WHERE order_p_no = #{P_NO}
	</update>
	
	<!-- 상품문의 답변 리스트 -->
	<select id="sellerQna" parameterType="String" resultType="qna">
		SELECT * FROM qna_tbl
		WHERE qna_s_id = #{USER_ID}
	</select>
	
	<!-- 상품문의 뷰 페이지 -->
	<select id="QnaReplyView" parameterType="int" resultType="qna">
		SELECT q.*, p.p_name FROM
			(qna_tbl q JOIN product_tbl p
			ON p.p_no = q.qna_p_no)
		WHERE qna_no = #{q_p_no}
	</select>
	
	<!-- 상품문의 답변 답변작성 -->
	<update id="QnaUpdate" parameterType="Map">
		UPDATE qna_tbl
			SET qna_answer = #{QnaAnswer},
				qna_isresponse = 1
		WHERE qna_no = #{QnaNo}
	</update>
	
	<!-- 배송중 확인시 재고수량 감소 -->
	<update id="OrderAmountM" parameterType="int">
		UPDATE product_tbl
			SET p_quantity = p_quantity - #{ORDER_AMOUNT} <!-- 재고수량 감소 -->
		WHERE p_no = #{ORDER_P_NO}
	</update>	
	
	<!-- 상품 삭제 -->
	<delete id="productDelete" parameterType="int">
		DELETE FROM product_tbl
		WHERE p_no = #{P_NO}
	</delete>
</mapper>
